#include <WiFi.h>
#include <FastLED.h>

#define NUM_LEDS 900
#define DATA_PIN 5

CRGB leds[NUM_LEDS];

const char* ssid     = "######";
const char* password = "######";

WiFiServer server(80);

void setup()
{
    Serial.begin(115200);
    pinMode(5, OUTPUT);      

    delay(10);


    Serial.println();
    Serial.println();
    Serial.print("Connecting to ");
    Serial.println(ssid);

    WiFi.begin(ssid, password);

    while (WiFi.status() != WL_CONNECTED) {
        delay(500);
        Serial.print(".");
    }

    Serial.println("");
    Serial.println("WiFi connected.");
    Serial.println("IP address: ");
    Serial.println(WiFi.localIP());

    FastLED.addLeds<WS2812B, DATA_PIN, GRB>(leds, NUM_LEDS);
    FastLED.setBrightness(150);

    server.begin();
}

int value = 0;

void stripGreen(){
  for(int i=0; i<NUM_LEDS; i++){
    leds[i] = CRGB::Green;
  }
  FastLED.show();
}

void stripRed(){
  for(int i=0; i<NUM_LEDS; i++){
    leds[i] = CRGB::Red;
  }
  FastLED.show();
}

void loop(){
 WiFiClient client = server.available();   

  if (client) {                            
    Serial.println("New Client.");           
    String currentLine = "";                
    while (client.connected()) {           
      if (client.available()) {            
        char c = client.read();            
        Serial.write(c);                  
        if (c == '\n') {                   

          if (currentLine.length() == 0) {
            client.println("HTTP/1.1 200 OK");
            client.println("Content-type:text/html");
            client.println();

            client.print("<a href=\"/H\">Strip Green</a><br>");
            client.print("<a href=\"/L\">Strip Red</a><br>");

            client.println();
            break;
          } else {    
            currentLine = "";
          }
        } else if (c != '\r') {  
        }
        if (currentLine.endsWith("GET /H")) {
        stripGreen();
        delay(100);
        }
        if (currentLine.endsWith("GET /L")) {
        stripRed();
        delay(100);
        }
      }
    }
    client.stop();
    Serial.println("Client Disconnected.");
  }
}
